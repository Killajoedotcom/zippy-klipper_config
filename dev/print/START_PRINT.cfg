#####################################
#         Start Print Macro         #
#       Version 2.0  2023-1-4       #
#####################################

################################
######### START_PRINT ##########
################################
[gcode_macro START_PRINT]
gcode:

    {% if printer["gcode_macro _printcfg"].auto_filsensor == True %}
        # Turn on Filament Sensor
        ENABLEFILAMENTSENSOR
    {% endif %}

    # Begin preheating and prepping for print
    G90 ; use absolute coordinates
    M83 ; extruder relative mode

    # Preheat bed
    {% if printer["gcode_macro _printcfg"].bed_temp > 0 %}
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_HEATING
        {% endif %}
        {% if printer["gcode_macro _printcfg"].extruder_pretemp > 0 %}
            M{printer["gcode_macro _printcfg"].output} Warming extruder
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer["gcode_macro _printcfg"].extruder_pretemp} ; allow partial nozzle warmup
        {% endif %}
        M{printer["gcode_macro _printcfg"].output} Preheating bed
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP-1} MAXIMUM={BED_TEMP+5}
    {% endif %}

    # Preheat/soak chamber
    {% if printer["gcode_macro _printcfg"].chamber_temp != 0 %}
        M{printer["gcode_macro _printcfg"].output} Preheating chamber
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_HEATING
        {% endif %}
        {% if printer["gcode_macro _printcfg"].chamber_type == 'temperature_fan' %}
            SET_TEMPERATURE_FAN_TARGET temperature_fan={printer["gcode_macro _printcfg"].chamber_name} target={printer["gcode_macro _printcfg"].chamber_temp}
        {% elif printer["gcode_macro _printcfg"].chamber_type == 'heater_generic' %}
            SET_HEATER_TEMPERATURE HEATER={printer["gcode_macro _printcfg"].chamber_name} TARGET={printer["gcode_macro _printcfg"].chamber_temp}
        {% endif %}
        {% if printer["gcode_macro _printcfg"].heat_soak == True %}
            {% if printer["gcode_macro _printcfg"].time_soak == True %}
                M{printer["gcode_macro _printcfg"].output} Soaking {printer["gcode_macro _printcfg"].chamber_time}mins
                G4 S{printer["gcode_macro _printcfg"].chamber_time*60}
            {% endif %}
            {% if printer["gcode_macro _printcfg"].temp_soak == True %}
                M{printer["gcode_macro _printcfg"].output} Soaking until {printer["gcode_macro _printcfg"].chamber_time}Â°
                TEMPERATURE_WAIT SENSOR={printer["gcode_macro _printcfg"].chamber_name} MINIMUM={printer["gcode_macro _printcfg"].chamber_temp} MAXIMUM={printer["gcode_macro _printcfg"].chamber_temp+25}
            {% endif %}
        {% endif %}
    {% endif %}

    # Homing/undock probe
    {% if printer["gcode_macro _printcfg"].docking_probe == True %}
        # Get probe
        M{printer["gcode_macro _printcfg"].output} Collecting probe
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_HOMING
        {% endif %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M{printer["gcode_macro _printcfg"].output} Homing XY
            G28 Y X ; home XY axis
        {% endif %}
        Attach_Probe_Lock ; attach probe
        M{printer["gcode_macro _printcfg"].output} Homing Z
        G28 Z ; home Z axis
    {% else %}
        HOME_IF_NEEDED
    {% endif %}
    
    # Z-tilt or QGL
    {% if printer["gcode_macro _printcfg"].z_tilt == True %}
        M{printer["gcode_macro _printcfg"].output} Calibrate Z
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_CALIBRATING_Z
        {% endif %}
        Z_TILT_ADJUST ; adjust z-tilt
    {% elif printer["gcode_macro _printcfg"].qgl == True %}
        M{printer["gcode_macro _printcfg"].output} Calibrate Z
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_CALIBRATING_Z
        {% endif %}
        QUAD_GANTRY_LEVEL  ; adjust QGL
    {% endif %}

    # Bed mesh
    {% if printer["gcode_macro _printcfg"].z_tilt == True %}
        M{printer["gcode_macro _printcfg"].output} Mesh print area
        BED_MESH_CALIBRATE
    {% endif %}

    # Dock probe
    {% if printer["gcode_macro _printcfg"].docking_probe == True %}
        M{printer["gcode_macro _printcfg"].output} Docking probe
        Dock_Probe_Unlock ; dock probe
    {% endif %}

    # Preheat hotend
    M{printer["gcode_macro _printcfg"].output} Preheating tool
    {% if printer["gcode_macro _printcfg"].led_status == True %}
        STATUS_HEATING
    {% endif %}
    M104 S{EXTRUDER_TEMP} ; set final nozzle temp

    G1 Z{25 + printer["gcode_macro CLEAN_NOZZLE"].start_z} F240
    G1 X{printer["gcode_macro CLEAN_NOZZLE"].start_z} Y{printer["gcode_macro CLEAN_NOZZLE"].start_y} F3000 ; move to park position

    #M190 S{BED_TEMP} ; wait for bed temp to stabilize
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP-1} MAXIMUM={BED_TEMP+5}
    M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize

    {% if printer["gcode_macro _printcfg"].audio_status == True %}
        {printer["gcode_macro _printcfg"].start_audio} ; audio feedback
    {% endif %}

    {% if printer["gcode_macro _printcfg"].led_status == True %}
        STATUS_CLEANING
    {% endif %}

    {% if printer["gcode_macro _printcfg"].cleaning == True %}
        CLEAN_NOZZLE HOT=True
    {% endif %}

    {% if printer["gcode_macro _printcfg"].purging == True %}
        ADAPTIVE_PURGE
    {% endif %}

    M{printer["gcode_macro _printcfg"].output} Print Started


################################
########### Aliases ############
################################
[gcode_macro PREP_PRINT]
gcode:
    START_PRINT { rawparams }

[gcode_macro PRINT_START]
gcode:
    START_PRINT { rawparams }