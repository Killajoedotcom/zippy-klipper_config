#####################################
#         Start Print Macro         #
#       Version 2.0  2023-1-4       #
#####################################

################################
######### START_PRINT ##########
################################
[gcode_macro START_PRINT]
gcode:

    {% if printer["gcode_macro _printcfg"].auto_filsensor == True %}
        # Turn on Filament Sensor
        ENABLEFILAMENTSENSOR
    {% endif %}

    # Define positioning system
    G90 ; use absolute coordinates
    M83 ; extruder relative mode

    # Prepare bed suface
    PREP_SURFACE

    # Preheat/soak chamber
    PREP_CHAMBER

    # Preheat hotend
    PREP_EXTRUDER

    # Play start tune
    {% if printer["gcode_macro _printcfg"].audio_status == True %}
        {printer["gcode_macro _printcfg"].start_audio} ; audio feedback
    {% endif %}

    M{printer["gcode_macro _printcfg"].output} Print Started
    {% if printer["gcode_macro _printcfg"].led_status == True %}
        STATUS_PRINTING
    {% endif %}

################################
######### PREP_SURFACE #########
################################
[gcode_macro PREP_SURFACE]
gcode:
    # Preheat bed
    {% if printer["gcode_macro _printcfg"].bed_temp > 0 %}
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_HEATING
        {% endif %}
        {% if printer["gcode_macro _printcfg"].extruder_pretemp > 0 %}
            M{printer["gcode_macro _printcfg"].output} Warming extruder
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer["gcode_macro _printcfg"].extruder_pretemp} ; allow partial nozzle warmup
        {% endif %}
        M{printer["gcode_macro _printcfg"].output} Preheating bed
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={printer["gcode_macro _printcfg"].bed_temp}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={printer["gcode_macro _printcfg"].bed_temp-1} MAXIMUM={printer["gcode_macro _printcfg"].bed_temp+5}
    {% endif %}

################################
######### PREP_CHAMBER #########
################################
[gcode_macro PREP_CHAMBER]
gcode:
    {% if printer["gcode_macro _printcfg"].chamber_temp != 0 %}
        M{printer["gcode_macro _printcfg"].output} Preheating chamber
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_HEATING
        {% endif %}
        {% if printer["gcode_macro _printcfg"].chamber_type == 'temperature_fan' %}
            SET_TEMPERATURE_FAN_TARGET temperature_fan={printer["gcode_macro _printcfg"].chamber_name} target={printer["gcode_macro _printcfg"].chamber_temp}
        {% elif printer["gcode_macro _printcfg"].chamber_type == 'heater_generic' %}
            SET_HEATER_TEMPERATURE HEATER={printer["gcode_macro _printcfg"].chamber_name} TARGET={printer["gcode_macro _printcfg"].chamber_temp}
        {% endif %}
        {% if printer["gcode_macro _printcfg"].heat_soak == True %}
            {% if printer["gcode_macro _printcfg"].time_soak == True %}
                M{printer["gcode_macro _printcfg"].output} Soaking {printer["gcode_macro _printcfg"].chamber_time}mins
                G4 S{printer["gcode_macro _printcfg"].chamber_time*60}
            {% endif %}
            {% if printer["gcode_macro _printcfg"].temp_soak == True %}
                M{printer["gcode_macro _printcfg"].output} Soaking until {printer["gcode_macro _printcfg"].chamber_time}Â°
                TEMPERATURE_WAIT SENSOR={printer["gcode_macro _printcfg"].chamber_name} MINIMUM={printer["gcode_macro _printcfg"].chamber_temp} MAXIMUM={printer["gcode_macro _printcfg"].chamber_temp+25}
            {% endif %}
        {% endif %}
    {% endif %}

################################
######## PREP_EXTRUDER #########
################################
[gcode_macro PREP_EXTRUDER]
gcode:
    M{printer["gcode_macro _printcfg"].output} Preheating tool
    {% if printer["gcode_macro _printcfg"].led_status == True %}
        STATUS_HEATING
    {% endif %}
    M104 S{printer["gcode_macro _printcfg"].extruder_temp} ; set final nozzle temp
    # Park for preheating
    {% if printer["gcode_macro _printcfg"].cleaning == True %}
        G1 Z{25 + printer["gcode_macro CLEAN_NOZZLE"].start_z} F240
        G1 X{printer["gcode_macro CLEAN_NOZZLE"].start_x} Y{printer["gcode_macro CLEAN_NOZZLE"].start_y} F3000 ; move to park position
    {% else %}
        G1 Z{printer["gcode_macro _printcfg"].preheat_z} F240
        G1 X{printer["gcode_macro _printcfg"].preheat_x} Y{printer["gcode_macro _printcfg"].preheat_y} F3000 ; move to park position
    {% endif %}
    # Wait for heating to complete
    M109 S{printer["gcode_macro _printcfg"].extruder_temp} ; wait for nozzle temp to stabilize

    # Nozzle Cleaning
    {% if printer["gcode_macro _printcfg"].cleaning == True %}
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_CLEANING
        {% endif %}
        CLEAN_NOZZLE HOT=True
    {% endif %}

    # Nozzle Purging
    {% if printer["gcode_macro _printcfg"].purging == True %}
        {% if printer["gcode_macro _printcfg"].led_status == True %}
            STATUS_CLEANING
        {% endif %}
        ADAPTIVE_PURGE
    {% endif %}

################################
########### Aliases ############
################################
[gcode_macro PREP_PRINT]
gcode:
    START_PRINT { rawparams }

[gcode_macro PRINT_START]
gcode:
    START_PRINT { rawparams }

[gcode_macro PRESENT_PRINT]
gcode:
    END_PRINT { rawparams }



### NOTE: The below macros are still unchanged from v1 ###

## This is a WIP!!! ##






################################
######## CANCEL_PRINT ##########
################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
    M117 Print Canceled 
    STATUS_ERROR
    ## Move head and retract only if not already in the pause state and park set to true
    {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
        _TOOLHEAD_PARK_PAUSE_CANCEL
    {% endif %}
    game_over_tune
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

################################
########## END_PRINT ###########
################################
[gcode_macro END_PRINT]
description: Present the finished print
gcode:
    {% set SEQUENTIAL_PRINT = printer["gcode_macro START_PRINT"].sequential_print %}
    {% set SEQUENCE_NUM = printer["gcode_macro START_PRINT"].sequence_num %}
    {% if SEQUENTIAL_PRINT > 0 %} ; If we are doing a sequenced print,
        {% if SEQUENCE_NUM == SEQUENTIAL_PRINT %} ; Final part completed
        M117 Final Part Completed
        COMPLETE_PRINT
        {% else %} ; Not the last part
        M117 Part {SEQUENCE_NUM} Complete. Please prepare next part
        CHANGE_FILAMENT ; Initiate a filament swap
        {% endif %}
    {% else %} ; If not sequenced prints,
        {% set svv = printer.save_variables.variables %}
        {% set SEQUENCE_NUM = 0 %} ; Reset the counter
        {% set MATERIAL = printer["gcode_macro START_PRINT"].filament %}
        {% set COLOUR = printer["gcode_macro START_PRINT"].colour %}
        SAVE_VARIABLE VARIABLE=last_material VALUE="'{MATERIAL}'"
        SAVE_VARIABLE VARIABLE=last_color VALUE="'{COLOUR}'"
        # Activate fireworks!
        STATUS_SUCCESS
        # Disable filament sensor
        DISABLEFILAMENTSENSOR
        # Turn down controller fans
        SYSTEM_FANS_OFF TARGET=45
        # Turn down the toolboard fan
        TOOLBOARD_FAN_OFF TARGET=45
        # Scrub VOCs
        {% set SCRUB = printer["gcode_macro SCRUBBER"].scrub %}
        {% set SCRUB_TIME = svv.scrub_time %}
        {% if SCRUB > 0 %}
            SCRUBBER TIME={SCRUB_TIME} EXHAUST=1
        {% endif %}
        # Acknowledge success!
        M117 Print Complete
        # Run end sequence
        POST_END
        # Play success tune
        MARIO_TUNE
        CLEAR_STATUS TIMEOUT=60
    {% endif %}

################################
######### BEGIN_LAYER ##########
################################
[gcode_macro BEGIN_LAYER]
description: Start a new layer and notify system
gcode:

    #Get layer details from Slicer GCode
    {% set CUR_LAYER = params.NUM|default(0)|int + 1 %}
    {% set NUM_LAYERS = params.COUNT|default(0)|int %}
    {% set LAYER_Z = params.ZLAY|default(0)|float %}
    #Get filament details from Slicer GCode
    {% set FILAMENT = params.FILAMENT|default('PLA') %}
    {% set COLOUR = params.COLOUR|default('rgb(0,0,0)') %}

    SET_PRINT_STATS_INFO TOTAL_LAYER={NUM_LAYERS} CURRENT_LAYER={CUR_LAYER}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=cur_layer VALUE={CUR_LAYER}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=num_layers VALUE={NUM_LAYERS}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=layer_z VALUE={LAYER_Z}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=filament VALUE="'{FILAMENT}'"
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=colour VALUE="'{COLOUR}'"
