################################
####### Filament Switch ########
################################
[filament_switch_sensor filament_sensor]
switch_pin: ^toolboard:PB6
#detection_length: 10.0
#extruder: extruder
pause_on_runout: False #pause handled by macro
runout_gcode:
    FILAMENT_RUNOUT
insert_gcode:
    LOAD_FILAMENT
event_delay: 3.0
pause_delay: 0.0001

################################
####### Filament Motion ########
################################
[filament_motion_sensor filament_motion]
switch_pin: ^gpio16
detection_length: 14.0
extruder: extruder
pause_on_runout: False #pause handled by macro
runout_gcode:
    FILAMENT_RUNOUT
insert_gcode:
    M117 Spool Filament Detected
event_delay: 3.0
pause_delay: 0.0001

################################
###### M600 CONFIGURATION ######
################################
[gcode_macro _m600cfg]
# The following variables define the behavior of macros in this file:
variable_default_temp: 220
variable_cooldown: 1
variable_coldstart: 0
variable_prev_temp: 0
variable_x: -15
variable_y: 220
variable_z: 10
variable_zmin: 150
variable_load_fast: 50
variable_load_slow: 75
variable_unload_length: 75
variable_purge: 50
variable_fast_speed: 1000
variable_park_speed: 9000
variable_output: 118
gcode:


################################
####### CHANGE_FILAMENT ########
################################
[gcode_macro CHANGE_FILAMENT]
description: Change the filament in toolhead
gcode:
    HOME_IF_NEEDED
    SET_GCODE_VARIABLE MACRO=_m600cfg VARIABLE=coldstart VALUE=1
    M600
    UNLOAD_FILAMENT
    ENABLEFILAMENTSENSOR

################################
####### FILAMENT_RUNOUT ########
################################
[gcode_macro FILAMENT_RUNOUT]
description: Procedure when Filament Runout Sensor is triggered
gcode:
    M{printer["gcode_macro _m600cfg"].output|int} Filament Runout
    TELEGRAM_FILAMENT_RUNOUT
    SET_IDLE_TIMEOUT TIMEOUT=3600
    change_tune
    ALERT_BEEP_ON
    SET_GCODE_VARIABLE MACRO=_m600cfg VARIABLE=coldstart VALUE=0
    M600
    {% if printer["gcode_macro _m600cfg"].output|int == 1 %}
        SET_GCODE_VARIABLE MACRO=_m600cfg VARIABLE=prev_temp VALUE={printer.extruder.target}
        M109 S0
    {% endif %}

################################
############ M600 ##############
################################
[gcode_macro M600]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=7200 ; Increase idle timeout
    {% if printer.idle_timeout.state == "Printing" %}
        PAUSE ; Pause printing
    {% endif %}
    STATUS_M600
    _FILAMENT_PARK
    ALERT_BEEP_ON

################################
####### UNLOAD_FILAMENT ########
################################
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set LENGTH = params.LENGTH|default(printer["gcode_macro _m600cfg"].unload_length)|float %} ; Unload length
    {% set TARGET = params.TARGET|default(printer["gcode_macro _m600cfg"].default_temp)|float %} ; Unload temperature
    ##################
    ALERT_BEEP_OFF
    {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% set cur_targ = printer.extruder.target|int %}        ; Current target
    {% if printer["gcode_macro _m600cfg"].prev_temp != 0 %}
        {% set TARGET = printer["gcode_macro _m600cfg"].prev_temp %}
    {% elif params.TARGET is defined and params.TARGET|int > printer.configfile.config.extruder.min_extrude_temp|int %} ; If current temp is below target
        {% set TARGET = params.TARGET|int|default(220) %}
    {% endif %}
    {% if printer.extruder.target < printer.configfile.config.extruder.min_extrude_temp|int %} ; Verify extruder is hot enough
        {% set TARGET = printer["gcode_macro _m600cfg"].default_temp %} ; Heat up to default temp
    {% endif %}
    {% if cur_temp < (TARGET-5) %}
        STATUS_HEATING
        M{printer["gcode_macro _m600cfg"].output|int} Heating nozzle...
        M109 S{TARGET} ; Heat nozzle to target temperature
    {% endif %}
    STATUS_M702
    G91 ; Relative positioning
    # Pre-unload
    G1 E5.0 F1200 
    G1 E3.0 F1600
    G1 E-13.14 F7000
    # Unload
    G1 E-{LENGTH} F{printer["gcode_macro _m600cfg"].fast_speed|int}
    G90 ; Absolute postitioning
    M400

    M{printer["gcode_macro _m600cfg"].output|int} Unload Complete
    STATUS_BUSY

################################
######## LOAD_FILAMENT #########
################################
[gcode_macro LOAD_FILAMENT]
gcode:
    {% set SLOW = params.SLOW|default(printer["gcode_macro _m600cfg"].load_slow)|float %} ; Purge amount
    {% set FAST = params.FAST|default(printer["gcode_macro _m600cfg"].load_fast)|float %} ; Load length
    ##################
    {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% set cur_targ = printer.extruder.target|int %}        ; Current target
    {% if printer["gcode_macro _m600cfg"].prev_temp != 0 %}
        {% set TARGET = printer["gcode_macro _m600cfg"].prev_temp %}
    {% elif params.TARGET is defined and params.TARGET|int > printer.configfile.config.extruder.min_extrude_temp|int %} ; If current temp is below target
        {% set TARGET = params.TARGET|int|default(220) %}
    {% else %}
        {% set TARGET = 220 %}
    {% endif %}
    {% if printer.extruder.target < printer.configfile.config.extruder.min_extrude_temp|int %} ; Verify extruder is hot enough
        {% set TARGET = printer["gcode_macro _m600cfg"].default_temp %} ; Heat up to default temp
    {% else %}
        {% set TARGET = printer.extruder.target %}
    {% endif %}
    {% if cur_temp < (TARGET-5) %}
        STATUS_HEATING
        M{printer["gcode_macro _m600cfg"].output|int} Heating nozzle...
        M109 S{TARGET} ; Heat nozzle to target temperature
    {% endif %}
    STATUS_M701
    M{printer["gcode_macro _m600cfg"].output|int}  LOADING...
    G91 ; Relative positioning
    G1 E25.0 F1000 ; pre-load
    G1 E{FAST} F{printer["gcode_macro _m600cfg"].fast_speed|int} ; load up to hotend
    G4 P900 ; wait a moment
    G1 E{SLOW} F250 ; purge to change filament
    G90 ; Absolute postitioning
    M400

    {% if printer["gcode_macro _m600cfg"].coldstart == 1 %}
        M{printer["gcode_macro _m600cfg"].output|int} Cooling nozzle...
        M109 S0
        SET_GCODE_VARIABLE MACRO=_m600cfg VARIABLE=coldstart VALUE=0
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_m600cfg VARIABLE=prev_temp VALUE=0
    SET_IDLE_TIMEOUT TIMEOUT=900 ; Return idle timeout to normal
    change_tune
    M{printer["gcode_macro _m600cfg"].output|int} Load Complete
    STATUS_READY

################################
############ PURGE #############
################################
[gcode_macro PURGE]
gcode:
    {% set LENGTH = params.LENGTH|default(printer["gcode_macro _m600cfg"].unload_length)|float %} ; Purge length
    ##################
    {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% set cur_targ = printer.extruder.target|int %}        ; Current target
    {% if printer["gcode_macro _m600cfg"].prev_temp != 0 %}
        {% set TARGET = printer["gcode_macro _m600cfg"].prev_temp %}
    {% elif params.TARGET is defined  %} ; If current temp is below target
        {% set TARGET = params.TARGET|int %}
    {% endif %}
    {% if printer.extruder.target < printer.configfile.config.extruder.min_extrude_temp|int %} ; Verify extruder is hot enough
        {% set TARGET = printer["gcode_macro _m600cfg"].default_temp %} ; Heat up to default temp
    {% endif %}
    STATUS_HEATING
    M{printer["gcode_macro _m600cfg"].output|int} Heating nozzle...
    M109 S{TARGET} ; Heat nozzle to target temperature
    STATUS_M701
    M{printer["gcode_macro _m600cfg"].output|int} PURGING..
    G91 ; Relative positioning
    G1 E{LENGTH} F250 ; Purge filament
    G90 ; Absolute postitioning
    M400
    M109 S{cur_targ} ; Return target temp to previous value

    M{printer["gcode_macro _m600cfg"].output|int} Purge Complete
    STATUS_READY

[gcode_macro _FILAMENT_PARK]
gcode:
	M{printer["gcode_macro _m600cfg"].output|int} Parking toolhead...
	SET_GCODE_VARIABLE MACRO=_m600cfg VARIABLE=prev_temp VALUE={printer.extruder.target}
    G91
	{% if printer.toolhead.position.z|float + printer["gcode_macro _m600cfg"].z|float < printer.configfile.config["stepper_z"]["position_max"]|float %}
		{% if  printer.toolhead.position.z < printer["gcode_macro _m600cfg"].zmin|int %}
            G1 Z{printer["gcode_macro _m600cfg"].zmin|int|int-printer.toolhead.position.z|int}
		{% else %}
            SAVE_GCODE_STATE NAME=save_state
            G1 Z{printer["gcode_macro _m600cfg"].z|int}
            RESTORE_GCODE_STATE NAME=save_state
        {% endif %}
	{% endif%}
	G90
	G1 X{printer["gcode_macro _m600cfg"].x|int} Y{printer["gcode_macro _m600cfg"].y|int} F{printer["gcode_macro _m600cfg"].park_speed|int}

[delayed_gcode AUTO_DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=0

[gcode_macro ENABLEFILAMENTSENSOR]
description: Activates filament sensor   
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=1

[gcode_macro DISABLEFILAMENTSENSOR]
description: Deactivates filament sensor
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=0